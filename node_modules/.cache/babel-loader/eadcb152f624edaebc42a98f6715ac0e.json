{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ar2r1\\\\Desktop\\\\React.JS\\\\0.5_todo\\\\to-do-list\\\\src\\\\TodoList.js\";\nimport React, { Component } from 'react';\nimport './TodoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  } // displayX = (bool) => {\n  //     if(bool == true) {\n  //         return(this._closeButton.className='display')\n  //     } else {\n  //     return(this._closeButton.className='noDisplay')\n  //     }\n  // }\n\n\n  render() {\n    let tasksArr = this.props.tasksObj;\n    let todoList = tasksArr.map(task => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        onMouseEnter: () => {\n          this._closeButton.className = 'display';\n        },\n        onMouseLeave: this._closeButton.className = 'noDisplay',\n        children: [task.taskContent, /*#__PURE__*/_jsxDEV(\"span\", {\n          ref: element => {\n            this._closeButton = element;\n          },\n          onClick: () => {\n            this.props.removeTask(task.id);\n          },\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 178\n        }, this)]\n      }, task.taskContent, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }, this);\n    }); // let todoList = () => {\n    //     console.log(tasksArr);\n    //     let liElements = [];\n    //     for(let element of tasksArr) {\n    //         liElements.push(<li key={element.id}>{element.taskContent} <span ref={ (element => {this._closeButton = element;})} className='close-X'>X</span> <input type='checkbox'></input></li>);\n    //     }\n    //     return(liElements);\n    // }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-list\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: todoList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["C:/Users/ar2r1/Desktop/React.JS/0.5_todo/to-do-list/src/TodoList.js"],"names":["React","Component","TodoList","constructor","props","state","render","tasksArr","tasksObj","todoList","map","task","_closeButton","className","taskContent","element","removeTask","id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,gBAAP;;;AAGA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC7BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAGH,GAN4B,CAQ7B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAE;AACR,QAAIC,QAAQ,GAAG,KAAKH,KAAL,CAAWI,QAA1B;AAEA,QAAIC,QAAQ,GAAGF,QAAQ,CAACG,GAAT,CAAeC,IAAD,IAAU;AACnC,0BAAO;AAAI,QAAA,YAAY,EAAG,MAAM;AAAC,eAAKC,YAAL,CAAkBC,SAAlB,GAA4B,SAA5B;AAAsC,SAAhE;AAAkE,QAAA,YAAY,EAAE,KAAKD,YAAL,CAAkBC,SAAlB,GAA4B,WAA5G;AAAA,mBAAiJF,IAAI,CAACG,WAAtJ,eAAkK;AAAM,UAAA,GAAG,EAAGC,OAAO,IAAI;AAAC,iBAAKH,YAAL,GAAoBG,OAApB;AAA6B,WAArD;AAAwD,UAAA,OAAO,EAAG,MAAM;AAC7O,iBAAKX,KAAL,CAAWY,UAAX,CAAsBL,IAAI,CAACM,EAA3B;AACC,WAFoK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAlK;AAAA,SAA8HN,IAAI,CAACG,WAAnI;AAAA;AAAA;AAAA;AAAA,cAAP;AAIH,KALc,CAAf,CAHQ,CAUR;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI;AAAA,kBACKL;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AA5CgC;;AA+CjC,eAAeP,QAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport './TodoList.css';\r\n\r\n\r\nclass TodoList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    // displayX = (bool) => {\r\n    //     if(bool == true) {\r\n    //         return(this._closeButton.className='display')\r\n    //     } else {\r\n    //     return(this._closeButton.className='noDisplay')\r\n    //     }\r\n    // }\r\n\r\n    render(){\r\n    let tasksArr = this.props.tasksObj;\r\n\r\n    let todoList = tasksArr.map( (task) => {\r\n        return(<li onMouseEnter={ () => {this._closeButton.className='display'}} onMouseLeave={this._closeButton.className='noDisplay'} key={task.taskContent}>{task.taskContent}<span ref={(element => {this._closeButton = element;})} onClick={ () => {\r\n            this.props.removeTask(task.id)\r\n            }\r\n        }>X</span></li>)\r\n    });\r\n\r\n    // let todoList = () => {\r\n    //     console.log(tasksArr);\r\n    //     let liElements = [];\r\n\r\n    //     for(let element of tasksArr) {\r\n    //         liElements.push(<li key={element.id}>{element.taskContent} <span ref={ (element => {this._closeButton = element;})} className='close-X'>X</span> <input type='checkbox'></input></li>);\r\n    //     }\r\n\r\n    //     return(liElements);\r\n    // }\r\n\r\n    return(\r\n        <div className='tasks-list'>\r\n            <ul>\r\n                {todoList}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}